(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[832],{3965:t=>{!function(){var e={229:function(t){var e,r,i,a=t.exports={};function l(){throw Error("setTimeout has not been defined")}function n(){throw Error("clearTimeout has not been defined")}try{e="function"==typeof setTimeout?setTimeout:l}catch(t){e=l}try{r="function"==typeof clearTimeout?clearTimeout:n}catch(t){r=n}function s(t){if(e===setTimeout)return setTimeout(t,0);if((e===l||!e)&&setTimeout)return e=setTimeout,setTimeout(t,0);try{return e(t,0)}catch(r){try{return e.call(null,t,0)}catch(r){return e.call(this,t,0)}}}var o=[],u=!1,h=-1;function g(){u&&i&&(u=!1,i.length?o=i.concat(o):h=-1,o.length&&c())}function c(){if(!u){var t=s(g);u=!0;for(var e=o.length;e;){for(i=o,o=[];++h<e;)i&&i[h].run();h=-1,e=o.length}i=null,u=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===n||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function f(t,e){this.fun=t,this.array=e}function d(){}a.nextTick=function(t){var e=Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)e[r-1]=arguments[r];o.push(new f(t,e)),1!==o.length||u||s(c)},f.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=d,a.addListener=d,a.once=d,a.off=d,a.removeListener=d,a.removeAllListeners=d,a.emit=d,a.prependListener=d,a.prependOnceListener=d,a.listeners=function(t){return[]},a.binding=function(t){throw Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(t){throw Error("process.chdir is not supported")},a.umask=function(){return 0}}},r={};function i(t){var a=r[t];if(void 0!==a)return a.exports;var l=r[t]={exports:{}},n=!0;try{e[t](l,l.exports,i),n=!1}finally{n&&delete r[t]}return l.exports}i.ab="//",t.exports=i(229)}()},5704:(t,e,r)=>{"use strict";var i,a;t.exports=(null==(i=r.g.process)?void 0:i.env)&&"object"==typeof(null==(a=r.g.process)?void 0:a.env)?r.g.process:r(3965)},6832:(t,e,r)=>{"use strict";let i="#version 300 es\nin vec2 a_position;\nin vec2 a_texCoord;\nout vec2 v_texCoord;\n\nvoid main() {\n    gl_Position = vec4(a_position, 0.0, 1.0);\n    v_texCoord = a_texCoord;\n}";class a{log(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];a.DEBUG&&console.log("[GPU]",...e)}info(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];a.DEBUG&&console.info("[GPU]",...e)}warnLog(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];console.warn("[GPU]",...e)}errLog(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];console.error("[GPU]",...e)}getLastReport(){return this.lastReport?{...this.lastReport}:null}now(){try{if("undefined"!=typeof performance&&"function"==typeof performance.now)return performance.now()}catch(t){}return Date.now()}glErrorLabel(t){let e=this.gl;return({[e.NO_ERROR]:"NO_ERROR",[e.INVALID_ENUM]:"INVALID_ENUM",[e.INVALID_VALUE]:"INVALID_VALUE",[e.INVALID_OPERATION]:"INVALID_OPERATION",[e.INVALID_FRAMEBUFFER_OPERATION]:"INVALID_FRAMEBUFFER_OPERATION",[e.OUT_OF_MEMORY]:"OUT_OF_MEMORY",[e.CONTEXT_LOST_WEBGL]:"CONTEXT_LOST_WEBGL"})[t]||"0x".concat(t.toString(16))}createCanvas2D(t,e){if("undefined"!=typeof OffscreenCanvas){let r=new OffscreenCanvas(t,e),i=r.getContext("2d",{willReadFrequently:!0});if(!i)throw Error("2D context unavailable");return{canvas:r,ctx:i}}if("undefined"!=typeof document){let r=document.createElement("canvas");r.width=t,r.height=e;let i=r.getContext("2d",{willReadFrequently:!0});if(!i)throw Error("2D context unavailable");return{canvas:r,ctx:i}}throw Error("No canvas implementation available")}computeOverlapPixels(t){return 0}async applyFilterTiled(t,e,r,i,l,n){var s,o,u,h,g,c;if(this.contextLost||this.gl.isContextLost())throw this.warnLog("applyFilterTiled: context lost at entry"),Error("WebGL context lost");let f=t.width,d=t.height,m=Math.max(.0625,Number(null!=(s=null==r?void 0:r.scale)?s:1)),p=Math.max(1,Math.floor(f*m)),x=Math.max(1,Math.floor(d*m)),E=null==r?void 0:r.partition,_=Math.max(0,Math.floor(null!=(o=null==E?void 0:E.x)?o:0)),v=Math.max(0,Math.floor(null!=(u=null==E?void 0:E.y)?u:0)),T=Math.max(1,Math.floor(null!=(h=null==E?void 0:E.w)?h:p)),b=Math.max(1,Math.floor(null!=(g=null==E?void 0:E.h)?g:x)),R=Math.min(3,e.upscaleFactor),M=this.computeOverlapPixels({...e,upscaleFactor:R}),w=new Uint8ClampedArray(T*b*4),{ctx:y}=this.createCanvas2D(1,1);if(!y)throw Error("2D context unavailable");y.imageSmoothingEnabled=!1;let S=async(s,o)=>{var u;if(null==l?void 0:l.aborted)throw Error("Operation cancelled");let h=0;try{h=this.gl.getParameter(this.gl.MAX_TEXTURE_SIZE)}catch(t){this.warnLog("applyFilterTiled: failed MAX_TEXTURE_SIZE query")}let g=(h||0)>=8192&&a.successRuns>0?1024:512,c=Math.max(256,Math.min(768,Math.floor((h||1024)/4))),E=Math.max(256,g-2*M),R=Math.min(c,E),y=Math.max(128,Math.min(s||(null!=(u=null==r?void 0:r.tileSize)?u:R),R)),A=Math.max(128,Math.min(Math.max(128,Math.min((h||4096)-2*M,y,E)),y)),F=0,L=Math.ceil(T/A)*Math.ceil(b/A);n&&n(0,L),this.log("Tiling",{attempt:o,srcW:f,srcH:d,tileW:A,tileH:A,overlap:M,expandedHardCap:g,coreCapByExpanded:E,targetCore:c,maxTex:h});let D=!1;for(let a=v;a<v+b;a+=A){let s=Math.min(A,v+b-a),u=a,h=Math.max(0,u-M),g=Math.min(x,a+s+M)-h;for(let c=_;c<_+T;c+=A){if(null==l?void 0:l.aborted)throw Error("Operation cancelled");let x=Math.min(A,_+T-c),E=c,b=Math.max(0,E-M),R=Math.min(p,c+x+M)-b,y=b/m,U=h/m,P=R/m,I=g/m;y<0&&(P+=y,y=0),U<0&&(I+=U,U=0);let O=f-y,C=d-U;P>O&&(P=O),I>C&&(I=C),this.log("Tile in",{x0Exp:b,y0Exp:h,wExp:R,hExp:g,core:{x:c,y:a,wCore:x,hCore:s}});try{let a={x:E-b,y:u-h,w:x,h:s},n=await this.applyFilter(t,e,i?t=>{let e=Math.min(Math.max(t,0),.9999),r=D?.2+(F+e)/L*.8:.2*e+(F+e)/L*.8;r<1&&i(Math.max(0,Math.min(.9999,r)))}:void 0,l,a,{regionOriginPx:{x:y,y:U},regionSizePx:{w:P,h:I},targetSizePx:{w:R,h:g},skipUpload:D,keepTexture:!0,gpuPreprocess:null==r?void 0:r.gpuPreprocess,skipPrepass:D});D=!0;let o=n.data;for(let t=0;t<s;t++){let e=t*x*4,r=u+t-v,i=E-_,a=(r*T+i)*4;w.set(o.subarray(e,e+4*x),a)}}catch(e){this.warnLog("Tile processing failed; backing off to tile size",e);let t=Math.max(128,Math.floor(Math.min(A,A)/2));if(t<Math.min(A,A)&&o<3)return S(t,o+1);throw e}F++,n&&n(F,L),i&&i(Math.max(0,Math.min(1,.2+F/L*.8)))}}let U=new ImageData(w,T,b);try{this.texture&&this.gl.deleteTexture(this.texture),this.prepassTexture&&this.gl.deleteTexture(this.prepassTexture)}catch(t){}return this.texture=null,this.prepassTexture=null,this.inputTexW=0,this.inputTexH=0,i&&i(1),U};try{let t=await S(null!=(c=null==r?void 0:r.tileSize)?c:0,0);return a.successRuns=Math.min(a.successRuns+1,3),t}catch(t){throw a.successRuns=0,t}}testFramebufferCapabilities(){if(this.contextLost||this.gl.isContextLost())throw Error("Cannot test framebuffer: WebGL context lost");let t=this.gl.createTexture();if(!t)throw Error("Cannot create test texture");this.gl.bindTexture(this.gl.TEXTURE_2D,t);let e=this.gl.RGBA8;try{this.gl.texImage2D(this.gl.TEXTURE_2D,0,e,256,256,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,null);let r=this.gl.createFramebuffer();if(!r)throw this.gl.deleteTexture(t),Error("Cannot create test framebuffer");this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,r),this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,t,0);let i=this.gl.checkFramebufferStatus(this.gl.FRAMEBUFFER);if(this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.deleteFramebuffer(r),this.gl.deleteTexture(t),i!==this.gl.FRAMEBUFFER_COMPLETE)throw Error("Framebuffer test failed with status: ".concat(i));this.log("Framebuffer capabilities test passed")}catch(e){throw this.gl.deleteTexture(t),e}}createShader(t,e){let r=this.gl.createShader(t);if(!r)return null;if(this.gl.shaderSource(r,e),this.gl.compileShader(r),!this.gl.getShaderParameter(r,this.gl.COMPILE_STATUS)){let e=this.gl.getShaderInfoLog(r)||"unknown error",i=t===this.gl.VERTEX_SHADER?"VERTEX":"FRAGMENT";console.error("Shader compilation error:",e);try{this.buildNotes.push("[".concat(i,"] compile error: ").concat(e))}catch(t){}return this.gl.deleteShader(r),null}return r}createProgram(t,e){let r=this.createShader(this.gl.VERTEX_SHADER,t),i=this.createShader(this.gl.FRAGMENT_SHADER,e);if(!r||!i)return null;let a=this.gl.createProgram();if(!a)return null;if(this.gl.attachShader(a,r),this.gl.attachShader(a,i),this.gl.linkProgram(a),!this.gl.getProgramParameter(a,this.gl.LINK_STATUS)){let t=this.gl.getProgramInfoLog(a)||"unknown error";console.error("Program linking error:",t);try{this.buildNotes.push("[PROGRAM] link error: ".concat(t))}catch(t){}return this.gl.deleteProgram(a),null}return this.gl.deleteShader(r),this.gl.deleteShader(i),a}initializeGL(){if(this.buildNotes=[],this.fastProgram=this.createProgram(i,"#version 300 es\nprecision highp float;\n\nin vec2 v_texCoord;\nout vec4 fragColor;\n\nuniform sampler2D u_image;\nuniform vec2 u_resolution;     // source texture size in pixels\nuniform vec2 u_regionOriginPx; // top-left in source pixels (ignored for full-frame)\nuniform vec2 u_regionSizePx;   // size in source pixels (ignored for full-frame)\n\n// Core controls\nuniform float u_kernelSize;     // base kernel size in px\nuniform float u_kernelScale;    // external scale (e.g., upscale)\nuniform float u_anisotropy;     // elongation factor\nuniform float u_sharpness;      // crispness\nuniform float u_alpha;          // blend amount\nuniform float u_threshold;      // detail sensitivity\nuniform float u_sigmaSpatial;   // spatial sigma factor\nuniform float u_sigmaRange;     // range sigma (0..1)\n// Painterly controls (brush-like)\nuniform int   u_sectors;        // number of sectors (1..8)\nuniform int   u_sectorCount;    // effective sector count (matches directions provided)\nuniform vec2  u_sectorDirs[8];  // precomputed sector unit vectors\nuniform float u_order;          // generalized order p\nuniform float u_adaptStrength;  // 0..1 detail adaptation\nuniform float u_radiusMinScale; // min radius scale\nuniform float u_radiusMaxScale; // max radius scale\nuniform float u_flowSigma;      // flow smoothing radius (px)\nuniform int   u_quantizeLevels; // palette levels (0=off)\nuniform float u_quantizeStrength; // 0..1\nuniform float u_quantizeDither;  // 0..1\nuniform float u_softTau;        // soft-min temperature (<=0 hard min)\nuniform float u_edgeSigma;      // XDoG sigma\nuniform float u_edgeTau;        // XDoG threshold\nuniform float u_edgePhi;        // XDoG slope\nuniform float u_edgeMix;        // 0..1 ink amount\nuniform float u_maxRadius;      // safety cap\n\n// Tight caps to keep this variant fast but painterly\nconst int MAX_RADIUS  = 24;\nconst int MAX_SECTORS = 8;\nconst int MAX_FLOW_R  = 6;\nconst float TWO_PI = 6.28318530718;\nfloat fastTanh(float x){\n    float e = exp(2.0 * x);\n    return (e - 1.0) / (e + 1.0);\n}\n\nfloat luma(vec3 c){ return dot(c, vec3(0.2126,0.7152,0.0722)); }\n\nvec2 gradAt(vec2 uv, vec2 texel){\n    float lL = luma(texture(u_image, uv - vec2(texel.x, 0.0)).rgb);\n    float lR = luma(texture(u_image, uv + vec2(texel.x, 0.0)).rgb);\n    float lU = luma(texture(u_image, uv - vec2(0.0, texel.y)).rgb);\n    float lD = luma(texture(u_image, uv + vec2(0.0, texel.y)).rgb);\n    return vec2(lR - lL, lD - lU) * 0.5;\n}\n\n// Structure tensor smoothing for coherent flow\nvec2 flowDir(vec2 uv, vec2 texel){\n    int r = int(clamp(floor(u_flowSigma), 0.0, float(MAX_FLOW_R)));\n    if (r <= 0){\n        vec2 g = gradAt(uv, texel);\n        vec2 n = normalize(g + 1e-6);\n        return vec2(-n.y, n.x);\n    }\n    float sigma = max(0.5, u_flowSigma);\n    float twoSigma2 = 2.0 * sigma * sigma;\n    float Jxx=0.0, Jxy=0.0, Jyy=0.0, wSum=0.0;\n    for (int dy=-MAX_FLOW_R; dy<=MAX_FLOW_R; ++dy){\n        if (abs(dy) > r) continue;\n        for (int dx=-MAX_FLOW_R; dx<=MAX_FLOW_R; ++dx){\n            if (abs(dx) > r) continue;\n            vec2 d = vec2(float(dx), float(dy));\n            float w = exp(-dot(d,d)/twoSigma2);\n            vec2 g = gradAt(uv + d*texel, texel);\n            Jxx += w*g.x*g.x; Jxy += w*g.x*g.y; Jyy += w*g.y*g.y; wSum += w;\n        }\n    }\n    if (wSum > 0.0){ Jxx/=wSum; Jxy/=wSum; Jyy/=wSum; }\n    float ang = 0.5 * atan(2.0*Jxy, Jxx - Jyy);\n    vec2 gdir = vec2(cos(ang), sin(ang));\n    vec2 t = vec2(-gdir.y, gdir.x);\n    return normalize(t + 1e-6);\n}\n\n// Limited Gaussian blur for luma (used by XDoG)\nfloat blurLuma(vec2 uv, vec2 texel, float sigma){\n    float s = max(0.001, sigma);\n    int r = int(clamp(ceil(3.0*s), 1.0, float(MAX_FLOW_R)));\n    float twoSigma2 = 2.0 * s * s;\n    float sum=0.0, wSum=0.0;\n    for (int dy=-MAX_FLOW_R; dy<=MAX_FLOW_R; ++dy){\n        if (abs(dy) > r) continue;\n        for (int dx=-MAX_FLOW_R; dx<=MAX_FLOW_R; ++dx){\n            if (abs(dx) > r) continue;\n            vec2 d = vec2(float(dx), float(dy));\n            float w = exp(-dot(d,d)/twoSigma2);\n            sum += w * luma(texture(u_image, uv + d*texel).rgb);\n            wSum += w;\n        }\n    }\n    return (wSum>0.0) ? (sum/wSum) : luma(texture(u_image, uv).rgb);\n}\n\nvec3 quantize(vec3 c, int levels, float k){\n    if (levels <= 1) return c;\n    vec3 q = floor(c * float(levels)) / float(levels);\n    return mix(c, q, clamp(k,0.0,1.0));\n}\n\nfloat rnd(vec2 p){\n    p = fract(p * vec2(123.34, 345.45));\n    p += dot(p, p + 34.345);\n    return fract(p.x * p.y);\n}\n\nvoid main(){\n    vec2 texel = 1.0 / u_resolution;\n    // Compute UV consistently: top-origin region to GL coords with a single Y-flip\n    vec2 uv;\n    if (u_regionSizePx.x > 0.0) {\n        // Region sampling: apply the Y flip in pixel space, none in UV\n        // For origin=(0,0) and size=resolution this reduces to uv.y = 1.0 - v_texCoord.y\n        vec2 px;\n        px.x = u_regionOriginPx.x + v_texCoord.x * u_regionSizePx.x;\n        px.y = u_regionOriginPx.y + (1.0 - v_texCoord.y) * u_regionSizePx.y;\n        uv = vec2(px.x / u_resolution.x, px.y / u_resolution.y);\n    } else {\n        uv = vec2(v_texCoord.x, 1.0 - v_texCoord.y);\n    }\n    vec3 src = texture(u_image, uv).rgb;\n\n    // Effective radius with adaptive mapping\n    float rBase = max(1.0, (u_kernelSize * u_kernelScale) * 0.5);\n    vec2 g = gradAt(uv, texel);\n    float gmag = length(g);\n    float detail = smoothstep(u_threshold * 0.25, u_threshold * 3.0, gmag);\n    float rScale = mix(u_radiusMaxScale, u_radiusMinScale, clamp(detail * u_adaptStrength, 0.0, 1.0));\n    float rEff = min(clamp(rBase * rScale, 1.0, float(MAX_RADIUS)), max(1.0, u_maxRadius));\n    int radius = int(floor(rEff));\n\n    // Flow-guided anisotropy (smoothed)\n    vec2 t = flowDir(uv, texel);\n    float theta = atan(t.y, t.x);\n    float ax = max(1.0, u_anisotropy);\n    float c = cos(theta), s = sin(theta);\n    mat2 R = mat2(c,-s,s,c);\n    mat2 A = R * mat2(ax,0.0,0.0,1.0/ax) * mat2(c,s,-s,c);\n\n    // Painterly sectors\n    int K = clamp(u_sectorCount, 1, MAX_SECTORS);\n    vec2 sectorDirs[MAX_SECTORS];\n    for (int i=0;i<MAX_SECTORS;++i){ if (i>=K) break; sectorDirs[i] = u_sectorDirs[i]; }\n\n    // Bilateral weights with sharpness impacting spatial sigma\n    float sigmaS = (max(0.001, u_sigmaSpatial) * rEff) / max(0.5, u_sharpness);\n    float invTwoSigmaS2 = 1.0 / (2.0 * sigmaS * sigmaS);\n    float sigmaR = max(0.02, u_sigmaRange);\n    float invTwoSigmaR2 = 1.0 / (2.0 * sigmaR * sigmaR);\n    float srcL = luma(src);\n\n    vec3  sum[MAX_SECTORS];\n    vec3  sumSq[MAX_SECTORS];\n    float wSum[MAX_SECTORS];\n    for (int i=0;i<MAX_SECTORS;++i){ sum[i]=vec3(0.0); sumSq[i]=vec3(0.0); wSum[i]=0.0; }\n\n    for (int dy=-MAX_RADIUS; dy<=MAX_RADIUS; ++dy){\n        for (int dx=-MAX_RADIUS; dx<=MAX_RADIUS; ++dx){\n            if (abs(dx)>radius || abs(dy)>radius) continue;\n            vec2 d = vec2(float(dx), float(dy));\n            vec2 da = A * d;\n            float md = -1e9; int si = 0;\n            for (int i=0;i<MAX_SECTORS;++i){ if (i>=K) break; float dv = dot(da, sectorDirs[i]); if (dv>md){ md=dv; si=i; } }\n            float dsq = dot(da,da);\n            float wS = exp(-dsq * invTwoSigmaS2);\n            vec3 cs = texture(u_image, uv + d*texel).rgb;\n            float dl = luma(cs) - srcL;\n            float wR = exp(-(dl*dl) * invTwoSigmaR2);\n            float w = wS * wR;\n            sum[si]   += cs * w;\n            sumSq[si] += cs * cs * w;\n            wSum[si]  += w;\n        }\n    }\n\n    // Sector energies and soft/hard selection\n    vec3 means[MAX_SECTORS];\n    float vals[MAX_SECTORS];\n    for (int i=0;i<MAX_SECTORS;++i){ means[i]=vec3(0.0); vals[i]=1e9; }\n    float vMin = 1e9;\n    float p = max(0.0, u_order);\n    for (int i=0;i<MAX_SECTORS;++i){\n        if (i>=K) break;\n        if (wSum[i] <= 0.0) { vals[i]=1e9; continue; }\n        float wc = wSum[i];\n        vec3 m = sum[i] / wc;\n        vec3 vv = max(sumSq[i]/wc - m*m, vec3(0.0));\n        float v = pow(vv.r + vv.g + vv.b, 0.5*(1.0+p));\n        means[i] = m; vals[i]=v; vMin=min(vMin, v);\n    }\n\n    vec3 painted;\n    if (u_softTau > 0.0){\n        float tau = max(1e-4, u_softTau);\n        float wsum = 0.0; vec3 acc=vec3(0.0);\n        for (int i=0;i<MAX_SECTORS;++i){ if (i>=K) break; if (vals[i] >= 1e8) continue; float w = exp(-(vals[i]-vMin)/tau); acc += means[i]*w; wsum += w; }\n        painted = (wsum>0.0) ? acc/wsum : src;\n    } else {\n        float bestV=1e9; vec3 bestM=src; for (int i=0;i<MAX_SECTORS;++i){ if (i>=K) break; if (vals[i] < bestV){ bestV=vals[i]; bestM=means[i]; } } painted = bestM;\n    }\n\n    // XDoG overlay\n    if (u_edgeMix > 0.0 && u_edgeSigma > 0.0){\n        float s1 = max(0.2, u_edgeSigma);\n        float s2 = s1 * 1.6;\n        float L1 = blurLuma(uv, texel, s1);\n        float L2 = blurLuma(uv, texel, s2);\n        float dog = L1 - L2;\n    float xd = 0.5 * (1.0 + fastTanh(u_edgePhi * (dog - u_edgeTau)));\n        float ink = clamp(1.0 - xd, 0.0, 1.0);\n        painted *= (1.0 - u_edgeMix * ink);\n    }\n\n    // Quantization with dither\n    if (u_quantizeLevels > 1){\n        vec2 pix = floor(uv * u_resolution + 0.5);\n        float amp = clamp(u_quantizeDither, 0.0, 1.0) / float(max(1, u_quantizeLevels));\n        float n = rnd(pix);\n        vec3 dpaint = clamp(painted + (n - 0.5) * amp, 0.0, 1.0);\n        painted = quantize(dpaint, u_quantizeLevels, u_quantizeStrength);\n    }\n\n    vec3 outRgb = mix(src, painted, clamp(u_alpha, 0.0, 2.0));\n    fragColor = vec4(outRgb, 1.0);\n}"),this.prepassProgram=this.createProgram(i,"#version 300 es\nprecision highp float;\n\nin vec2 v_texCoord;\nout vec4 fragColor;\n\nuniform sampler2D u_image;\nuniform vec2 u_resolution; // source texture size in pixels\n\n// Edge-aware blur controls\nuniform float u_blurRadius; // 0..8\nuniform float u_blurAmount; // 0..1\n\n// Color adjustments\nuniform float u_saturation; // 0..2 (1=no change)\nuniform float u_warmth;     // -1..1\nuniform float u_tint;       // -1..1\nuniform float u_brightness; // 0..2 (1=no change)\n\nfloat luma(vec3 c){ return dot(c, vec3(0.2126,0.7152,0.0722)); }\n\nvec2 sobel(vec2 uv, vec2 texel){\n    float tl = luma(texture(u_image, uv + texel*vec2(-1.0,-1.0)).rgb);\n    float  l = luma(texture(u_image, uv + texel*vec2(-1.0, 0.0)).rgb);\n    float bl = luma(texture(u_image, uv + texel*vec2(-1.0, 1.0)).rgb);\n    float  t = luma(texture(u_image, uv + texel*vec2( 0.0,-1.0)).rgb);\n    float  c = luma(texture(u_image, uv).rgb);\n    float  b = luma(texture(u_image, uv + texel*vec2( 0.0, 1.0)).rgb);\n    float tr = luma(texture(u_image, uv + texel*vec2( 1.0,-1.0)).rgb);\n    float  r = luma(texture(u_image, uv + texel*vec2( 1.0, 0.0)).rgb);\n    float br = luma(texture(u_image, uv + texel*vec2( 1.0, 1.0)).rgb);\n    float gx = -tl - 2.0*l - bl + tr + 2.0*r + br;\n    float gy = -tl - 2.0*t - tr + bl + 2.0*b + br;\n    return vec2(gx, gy);\n}\n\nvec3 gaussianBlur(vec2 uv, vec2 texel, int radius, float sigma){\n    if (radius <= 0) return texture(u_image, uv).rgb;\n    float twoSigma2 = 2.0 * sigma * sigma;\n    vec3 sum = vec3(0.0);\n    float wsum = 0.0;\n    for (int dy=-8; dy<=8; ++dy){\n        if (abs(dy) > radius) continue;\n        for (int dx=-8; dx<=8; ++dx){\n            if (abs(dx) > radius) continue;\n            vec2 d = vec2(float(dx), float(dy));\n            float w = exp(-dot(d,d)/twoSigma2);\n            sum += w * texture(u_image, uv + d*texel).rgb;\n            wsum += w;\n        }\n    }\n    return (wsum > 0.0) ? (sum/wsum) : texture(u_image, uv).rgb;\n}\n\nvoid main(){\n    vec2 uv = v_texCoord;\n    vec2 texel = 1.0 / u_resolution;\n    vec3 src = texture(u_image, uv).rgb;\n\n    // Edge-aware blur: blur flat zones more than edges\n    float r = clamp(u_blurRadius, 0.0, 8.0);\n    int ri = int(floor(r + 1e-3));\n    vec3 blurred = gaussianBlur(uv, texel, ri, max(0.5, r));\n    vec2 g = sobel(uv, texel);\n    float gmag = length(g);\n    // Normalize local edge strength approximately using a soft response\n    float edge = clamp(gmag * 2.0, 0.0, 1.0);\n    float wMix = clamp(u_blurAmount, 0.0, 1.0) * (1.0 - edge) * (1.0 - edge);\n    vec3 col = mix(src, blurred, wMix);\n\n    // Saturation: lerp between gray and color\n    float L = luma(col);\n    float sat = clamp(u_saturation, 0.0, 2.0);\n    col = mix(vec3(L), col, sat);\n\n    // Warmth/tint biases\n    float warm = clamp(u_warmth, -1.0, 1.0);\n    float ti = clamp(u_tint, -1.0, 1.0);\n    col.r += 0.10 * warm; col.b -= 0.10 * warm;\n    col.g += -0.08 * ti; col.r += 0.04 * ti; col.b += 0.04 * ti;\n\n    // Brightness\n    col *= clamp(u_brightness, 0.0, 2.0);\n    col = clamp(col, 0.0, 1.0);\n    fragColor = vec4(col, 1.0);\n}"),!this.fastProgram)throw Error("Failed to create shader programs");let t=new Float32Array([-1,-1,0,0,1,-1,1,0,-1,1,0,1,1,1,1,1]);this.quadBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.quadBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,t,this.gl.STATIC_DRAW);let e=this.gl;this.fastVAO=e.createVertexArray(),e.bindVertexArray(this.fastVAO);let r=this.gl.getAttribLocation(this.fastProgram,"a_position"),a=this.gl.getAttribLocation(this.fastProgram,"a_texCoord");if(this.gl.enableVertexAttribArray(r),this.gl.enableVertexAttribArray(a),this.gl.vertexAttribPointer(r,2,this.gl.FLOAT,!1,16,0),this.gl.vertexAttribPointer(a,2,this.gl.FLOAT,!1,16,8),this.prepassProgram){this.prepassVAO=e.createVertexArray(),e.bindVertexArray(this.prepassVAO);let t=this.gl.getAttribLocation(this.prepassProgram,"a_position"),r=this.gl.getAttribLocation(this.prepassProgram,"a_texCoord");this.gl.enableVertexAttribArray(t),this.gl.enableVertexAttribArray(r),this.gl.vertexAttribPointer(t,2,this.gl.FLOAT,!1,16,0),this.gl.vertexAttribPointer(r,2,this.gl.FLOAT,!1,16,8)}e.bindVertexArray(null),this.uniformLocations.clear()}ensureReadbackSurface(t,e){let r=Math.max(1,Math.floor(t)),i=Math.max(1,Math.floor(e));if(!this.readbackCanvas){if("undefined"!=typeof OffscreenCanvas)this.readbackCanvas=new OffscreenCanvas(r,i),this.readbackCtx=this.readbackCanvas.getContext("2d",{willReadFrequently:!0});else if("undefined"!=typeof document){let t=document.createElement("canvas");t.width=r,t.height=i,this.readbackCanvas=t,this.readbackCtx=t.getContext("2d",{willReadFrequently:!0})}}if(!this.readbackCanvas||!this.readbackCtx)throw Error("2D context");let a=this.readbackCanvas;(a.width!==r||a.height!==i)&&(a.width=r,a.height=i)}createTexture(t,e){let r=this.gl.createTexture();if(!r)return console.error("Failed to create texture"),null;this.gl.bindTexture(this.gl.TEXTURE_2D,r);try{let i=this.gl;i.texStorage2D(i.TEXTURE_2D,1,i.RGBA8,t,e);let a=this.gl.getError();if(a!==this.gl.NO_ERROR)try{this.gl.bindTexture(this.gl.TEXTURE_2D,r),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,t,e,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,null);let i=this.gl.getError();if(i!==this.gl.NO_ERROR)return console.error("WebGL error creating texture (both texStorage2D and texImage2D failed):",a,i),this.gl.deleteTexture(r),null}catch(t){return console.error("Exception creating texture (texImage2D fallback):",t),this.gl.deleteTexture(r),null}return this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),r}catch(t){return console.error("Exception creating texture:",t),this.gl.deleteTexture(r),null}}ensureRenderTargetAtLeast(t,e){if(this.contextLost||this.gl.isContextLost())throw Error("Cannot create framebuffer: WebGL context lost");let r=t+1&-2,i=e+1&-2;this.disposeRenderTarget();let a=this.gl.getParameter(this.gl.MAX_TEXTURE_SIZE),l=this.gl.getParameter(this.gl.MAX_RENDERBUFFER_SIZE),n=Math.min("number"==typeof a?a:0,"number"==typeof l?l:0);if(!Number.isFinite(n)||n<=0)throw Error("WebGL limits unavailable; context may be lost.");if(r>n||i>n)throw Error("Target ".concat(r,"\xd7").concat(i," exceeds device limit ").concat(n));if(this.outputTexture=this.createTexture(r,i),this.outputTexture)if(this.framebuffer=this.gl.createFramebuffer(),this.framebuffer){this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.framebuffer),this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,this.outputTexture,0),this.gl.drawBuffers([this.gl.COLOR_ATTACHMENT0]);let a=this.gl.checkFramebufferStatus(this.gl.FRAMEBUFFER);if(a===this.gl.FRAMEBUFFER_COMPLETE){this.rtWidth=r,this.rtHeight=i,this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null);return}console.error("Texture FBO not complete, falling back to renderbuffer:",a,{dimensions:"".concat(t,"\xd7").concat(e)}),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.deleteFramebuffer(this.framebuffer),this.gl.deleteTexture(this.outputTexture),this.framebuffer=null,this.outputTexture=null}else this.gl.deleteTexture(this.outputTexture),this.outputTexture=null;{if(this.framebuffer=this.gl.createFramebuffer(),!this.framebuffer)throw Error("Failed to create framebuffer (renderbuffer path)");if(this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.framebuffer),this.outputRenderbuffer=this.gl.createRenderbuffer(),!this.outputRenderbuffer)throw this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.deleteFramebuffer(this.framebuffer),this.framebuffer=null,Error("Failed to create renderbuffer for framebuffer");this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,this.outputRenderbuffer),this.gl.renderbufferStorage(this.gl.RENDERBUFFER,this.gl.RGBA8,r,i),this.gl.framebufferRenderbuffer(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.RENDERBUFFER,this.outputRenderbuffer),this.gl.drawBuffers([this.gl.COLOR_ATTACHMENT0]);let a=this.gl.checkFramebufferStatus(this.gl.FRAMEBUFFER);if(a!==this.gl.FRAMEBUFFER_COMPLETE){this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.deleteFramebuffer(this.framebuffer),this.gl.deleteRenderbuffer(this.outputRenderbuffer),this.framebuffer=null,this.outputRenderbuffer=null;let r="Framebuffer not complete: ";switch(a){case this.gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:r+="FRAMEBUFFER_INCOMPLETE_ATTACHMENT";break;case this.gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:r+="FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";break;case this.gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:r+="FRAMEBUFFER_INCOMPLETE_DIMENSIONS";break;case this.gl.FRAMEBUFFER_UNSUPPORTED:r+="FRAMEBUFFER_UNSUPPORTED";break;default:r+="Unknown error code: ".concat(a)}throw console.error(r,{dimensions:"".concat(t,"\xd7").concat(e),webglVersion:"WebGL2",framebufferStatus:a}),Error(r)}this.rtWidth=r,this.rtHeight=i,this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null)}}disposeRenderTarget(){try{this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null)}catch(t){}if(this.framebuffer){try{this.gl.deleteFramebuffer(this.framebuffer)}catch(t){}this.framebuffer=null}if(this.outputTexture){try{this.gl.deleteTexture(this.outputTexture)}catch(t){}this.outputTexture=null}if(this.outputRenderbuffer){try{this.gl.deleteRenderbuffer(this.outputRenderbuffer)}catch(t){}this.outputRenderbuffer=null}this.rtWidth=0,this.rtHeight=0}async applyFilter(t,e,r,i,a,l){this.info("applyFilter:start");let n={startedAt:this.now(),userAgent:"undefined"!=typeof navigator?navigator.userAgent:void 0,webglVersion:(()=>{try{return String(this.gl.getParameter(this.gl.VERSION))}catch(t){return}})(),shadingLanguage:(()=>{try{return String(this.gl.getParameter(this.gl.SHADING_LANGUAGE_VERSION))}catch(t){return}})(),extensions:(()=>{try{return(this.gl.getSupportedExtensions()||[]).slice().sort()}catch(t){return[]}})(),limits:(()=>{try{let t=this.gl.getParameter(this.gl.MAX_VIEWPORT_DIMS);return{MAX_TEXTURE_SIZE:this.maxTextureSize,MAX_RENDERBUFFER_SIZE:this.maxRenderbufferSize,MAX_VIEWPORT_DIMS:t}}catch(t){return{}}})(),notes:[],errors:[]};try{var s,o,u,h,g,c,f,d,m,p,x,E,_,v,T,b,R,M,w,y,S,A,F,L,D,U,P,I,O,C,N,X,B,k,z,G,W,q,V,H,J,Q,Y,K,Z,j,$,tt;try{try{n.vendor=String(this.gl.getParameter(this.gl.VENDOR))}catch(t){}try{n.renderer=String(this.gl.getParameter(this.gl.RENDERER))}catch(t){}if(!("undefined"!=typeof navigator&&/firefox/i.test(navigator.userAgent))){let t=this.gl.getExtension("WEBGL_debug_renderer_info");if(t){try{n.vendor=String(this.gl.getParameter(t.UNMASKED_VENDOR_WEBGL))}catch(t){}try{n.renderer=String(this.gl.getParameter(t.UNMASKED_RENDERER_WEBGL))}catch(t){}}}}catch(t){}if(this.contextLost||this.gl.isContextLost())throw this.warnLog("applyFilter: context lost at entry"),n.failedStep="entry",Error("WebGL context lost");let te=t.width,tr=t.height,ti=Math.min(3,e.upscaleFactor),ta=Math.floor(te*ti),tl=Math.floor(tr*ti),tn=e.preserveSettings?{...e,kernelSize:e.kernelSize,anisotropy:e.anisotropy,sharpness:e.sharpness,alpha:e.alpha,threshold:e.threshold}:{...e,kernelSize:Math.max(4,Math.floor(e.kernelSize*e.upscaleFactor))};if(this.log("applyFilter: sizes",{originalSize:"".concat(te,"\xd7").concat(tr),targetSize:"".concat(ta,"\xd7").concat(tl),upscaleFactor:ti,preserveSettings:e.preserveSettings,originalKernel:e.kernelSize,adjustedKernel:tn.kernelSize}),n.originalSize={w:te,h:tr},n.targetSize={w:Math.max(1,Math.floor(null!=(m=null==l||null==(s=l.targetSizePx)?void 0:s.w)?m:te)),h:Math.max(1,Math.floor(null!=(p=null==l||null==(o=l.targetSizePx)?void 0:o.h)?p:tr))},n.upscaleFactor=ti,n.mode="fast",this.buildNotes&&this.buildNotes.length&&(n.notes=[...n.notes||[],...this.buildNotes]),null==i?void 0:i.aborted)throw n.failedStep="precheck-cancelled",Error("Operation cancelled");let ts=t,to=null,tu=this.gl.getParameter(this.gl.MAX_TEXTURE_SIZE),th=this.gl.getParameter(this.gl.MAX_RENDERBUFFER_SIZE),tg=Math.min("number"==typeof tu?tu:0,"number"==typeof th?th:0),tc=Math.min(this.maxTextureSize||1/0,this.maxRenderbufferSize||1/0),tf=Number.isFinite(tc)&&tc>0?tc:tg;if(!Number.isFinite(tg)||tg<=0)throw n.failedStep="limits-query",Error("Unable to query WebGL limits; context may be lost.");let td=Math.max(1,Math.floor(tf));if(ts.width>td||ts.height>td){let t=Math.min(td/ts.width,td/ts.height),e=Math.max(1,Math.floor(ts.width*t)),r=Math.max(1,Math.floor(ts.height*t));this.warnLog("Input too large (".concat(ts.width,"x").concat(ts.height,"). Downscaling to ").concat(e,"x").concat(r," to fit device limits (max ").concat(td,").")),null==(x=n.notes)||x.push("downscaled ".concat(ts.width,"x").concat(ts.height," -> ").concat(e,"x").concat(r));let i=!1;if("function"==typeof createImageBitmap)try{i=!!(to=await createImageBitmap(ts,{resizeWidth:e,resizeHeight:r,resizeQuality:"high"}))}catch(t){}if(!i){let t=this.createCanvas2D(ts.width,ts.height);t.ctx.putImageData(ts,0,0);let i=this.createCanvas2D(e,r);i.ctx.imageSmoothingEnabled=!0;try{i.ctx.imageSmoothingQuality="high"}catch(t){}let a=t.canvas;i.ctx.drawImage(a,0,0,e,r),ts=i.ctx.getImageData(0,0,e,r)}}let tm=Math.max(1,Math.floor(null!=(E=null==l||null==(u=l.targetSizePx)?void 0:u.w)?E:ts.width)),tp=Math.max(1,Math.floor(null!=(_=null==l||null==(h=l.targetSizePx)?void 0:h.h)?_:ts.height));this.log("applyFilter:target",{tgtW:tm,tgtH:tp});try{let t=this.canvasEl;t.width!==tm&&(t.width=tm),t.height!==tp&&(t.height=tp)}catch(t){}this.gl.viewport(0,0,tm,tp),n.usedDefaultFramebuffer=!0,n.readbackMethod="2d-drawImage";let tx=this.now();this.log("upload:start"),this.texture||(this.texture=this.gl.createTexture(),this.inputTexW=0,this.inputTexH=0),this.gl.bindTexture(this.gl.TEXTURE_2D,this.texture);let tE=this.gl;if(this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT,4),!(null==l?void 0:l.skipUpload)){let t=to?to.width:ts.width,e=to?to.height:ts.height;if(this.inputTexW<t||this.inputTexH<e){this.log("upload:alloc:new",{w:t,h:e});try{this.texture&&this.gl.deleteTexture(this.texture)}catch(t){}this.texture=this.gl.createTexture(),this.gl.bindTexture(this.gl.TEXTURE_2D,this.texture);let r=!1;if(to)try{this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,to),r=!0}catch(t){}r||this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,t,e,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,null);let i=0;try{i=this.gl.getError()}catch(t){}if(i!==this.gl.NO_ERROR){this.warnLog("upload:alloc:texImage2D(null) failed",i),null==(v=n.errors)||v.push({where:"texImage2D(null)",code:i,label:this.glErrorLabel(i)});try{tE.texStorage2D(tE.TEXTURE_2D,1,tE.RGBA8,t,e)}catch(t){}let r=0;try{r=this.gl.getError()}catch(t){}if(r!==this.gl.NO_ERROR)throw this.errLog("upload:alloc:texStorage2D failed",r),null==(T=n.errors)||T.push({where:"texStorage2D",code:r,label:this.glErrorLabel(r)}),n.failedStep="input-texture-alloc",Error("INPUT_TEX_ALLOC_FAILED")}this.inputTexW=t,this.inputTexH=e}if(!to)try{this.log("upload:subimage:start",{w:ts.width,h:ts.height}),tE.texSubImage2D(tE.TEXTURE_2D,0,0,0,ts.width,ts.height,tE.RGBA,tE.UNSIGNED_BYTE,ts.data),this.log("upload:subimage:done")}catch(t){throw this.errLog("texSubImage2D error",t),n.failedStep="texSubImage2D",n.exception=String(t),Error("UPLOAD_SUBIMAGE_FAILED")}}this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),n.timings=n.timings||{},n.timings.upload=this.now()-tx;let t_=null!=l&&!!l.skipPrepass&&!!this.prepassTexture;if(!(null==l?void 0:l.skipPrepass)&&(null==l?void 0:l.gpuPreprocess)&&l.gpuPreprocess.enabled&&this.prepassProgram&&this.texture)try{let t=this.inputTexW||ts.width,e=this.inputTexH||ts.height;if(this.prepassTexture){try{this.gl.deleteTexture(this.prepassTexture)}catch(t){}this.prepassTexture=null}if(this.prepassTexture=this.createTexture(t,e),!this.prepassTexture)throw Error("prepass texture alloc failed");if(this.framebuffer||(this.framebuffer=this.gl.createFramebuffer()),!this.framebuffer)throw Error("prepass framebuffer alloc failed");if(this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.framebuffer),this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,this.prepassTexture,0),this.gl.drawBuffers([this.gl.COLOR_ATTACHMENT0]),this.gl.checkFramebufferStatus(this.gl.FRAMEBUFFER)!==this.gl.FRAMEBUFFER_COMPLETE)throw Error("prepass FBO incomplete");this.gl.viewport(0,0,t,e),this.gl.disable(this.gl.BLEND),this.gl.useProgram(this.prepassProgram),this.gl.bindVertexArray(this.prepassVAO),this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,this.texture);let r=t=>this.gl.getUniformLocation(this.prepassProgram,t);this.gl.uniform1i(r("u_image"),0),this.gl.uniform2f(r("u_resolution"),this.inputTexW||ts.width,this.inputTexH||ts.height);let i=l.gpuPreprocess,a=Math.max(0,Math.min(8,Math.floor(null!=(b=i.blurRadius)?b:0))),n=Math.max(0,Math.min(1,null!=(R=i.blurAmount)?R:0));this.gl.uniform1f(r("u_blurRadius"),a),this.gl.uniform1f(r("u_blurAmount"),n);let s=Math.min(2,Math.max(0,null!=(M=i.saturation)?M:1)),o=Math.max(-1,Math.min(1,null!=(w=i.warmth)?w:0)),u=Math.max(-1,Math.min(1,null!=(y=i.tint)?y:0)),h=Math.min(2,Math.max(0,null!=(S=i.brightness)?S:1));this.gl.uniform1f(r("u_saturation"),s),this.gl.uniform1f(r("u_warmth"),o),this.gl.uniform1f(r("u_tint"),u),this.gl.uniform1f(r("u_brightness"),h),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),t_=!0}catch(t){this.warnLog("prepass failed, continuing without it",t),t_=!1}finally{this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null)}if(r&&r(.5),null==i?void 0:i.aborted)throw n.failedStep="pre-draw-cancelled",Error("Operation cancelled");this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null);try{this.gl.bindFramebuffer(this.gl.READ_FRAMEBUFFER,null)}catch(t){}this.gl.viewport(0,0,tm,tp),this.gl.disable(this.gl.BLEND);let tv=this.fastProgram,tT=this.fastVAO;if(!tv||!tT)throw Error("Shader program/VAO not initialized");this.log("draw:setup",{mode:"fast"}),this.gl.useProgram(tv),this.gl.clearColor(0,0,0,0),this.gl.clear(this.gl.COLOR_BUFFER_BIT);try{for(;this.gl.getError()!==this.gl.NO_ERROR;);}catch(t){}this.gl.bindVertexArray(tT);let tb=t=>{if(this.uniformLocations.has(t))return this.uniformLocations.get(t);let e=this.gl.getUniformLocation(tv,t);return this.uniformLocations.set(t,e),e},tR=(t,e)=>{let r=tb(t);r&&this.gl.uniform1i(r,e)},tM=(t,e)=>{let r=tb(t);r&&this.gl.uniform1f(r,e)},tw=(t,e,r)=>{let i=tb(t);i&&this.gl.uniform2f(i,e,r)};this.log("applyFilter: uniforms",{webglVersion:"WebGL2",kernelSize:tn.kernelSize,anisotropy:tn.anisotropy,sharpness:tn.sharpness,alpha:tn.alpha,threshold:tn.threshold,resolution:"".concat(ts.width,"x").concat(ts.height),kernelScale:e.preserveSettings?ti:1}),n.uniforms={u_kernelSize:tn.kernelSize,u_anisotropy:tn.anisotropy,u_sharpness:tn.sharpness,u_alpha:tn.alpha,u_threshold:tn.threshold,u_resolution_w:ts.width,u_resolution_h:ts.height,u_kernelScale:e.preserveSettings?ti:1},tR("u_image",0),tw("u_resolution",this.inputTexW||ts.width,this.inputTexH||ts.height);let ty=null!=(A=null==l||null==(g=l.regionOriginPx)?void 0:g.x)?A:0,tS=null!=(F=null==l||null==(c=l.regionOriginPx)?void 0:c.y)?F:0,tA=null!=(L=null==l||null==(f=l.regionSizePx)?void 0:f.w)?L:0,tF=null!=(D=null==l||null==(d=l.regionSizePx)?void 0:d.h)?D:0;tw("u_regionOriginPx",ty,tS),tw("u_regionSizePx",tA,tF);let tL=e.preserveSettings?ti:1;tM("u_kernelSize",tn.kernelSize),tM("u_kernelScale",tL),tM("u_anisotropy",tn.anisotropy),tM("u_sharpness",tn.sharpness),tM("u_alpha",tn.alpha),tM("u_threshold",tn.threshold);let tD=Math.max(1,Math.min(8,Math.round(null!=(U=e.sectors)?U:4))),tU=null!=(P=e.order)?P:1,tP=null!=(I=e.sigmaSpatial)?I:.5,tI=null!=(O=e.sigmaRange)?O:.15,tO=null!=(C=e.adaptStrength)?C:.75,tC=null!=(N=e.radiusMinScale)?N:.35,tN=null!=(X=e.radiusMaxScale)?X:1,tX=null!=(B=e.flowSigma)?B:2,tB=Math.max(0,Math.round(null!=(k=e.quantizeLevels)?k:0)),tk=null!=(z=e.quantizeStrength)?z:.6,tz=null!=(G=e.quantizeDither)?G:.35;tR("u_sectors",tD);let tG=new Float32Array(16),tW=2*Math.PI/tD;for(let t=0;t<8;t++)if(t<tD){let e=t*tW;tG[2*t+0]=Math.cos(e),tG[2*t+1]=Math.sin(e)}else tG[2*t+0]=0,tG[2*t+1]=0;let tq=tb("u_sectorCount");tq&&this.gl.uniform1i(tq,tD);let tV=tb("u_sectorDirs[0]");tV&&this.gl.uniform2fv(tV,tG),tM("u_order",tU),tM("u_sigmaSpatial",tP),tM("u_sigmaRange",tI),tM("u_adaptStrength",tO),tM("u_radiusMinScale",tC),tM("u_radiusMaxScale",tN),tM("u_flowSigma",tX),tR("u_quantizeLevels",tB),tM("u_quantizeStrength",tk),tM("u_quantizeDither",tz);let tH=null!=(W=e.softTau)?W:0,tJ=null!=(q=e.edgeSigma)?q:0,tQ=null!=(V=e.edgeTau)?V:0,tY=null!=(H=e.edgePhi)?H:10,tK=null!=(J=e.edgeMix)?J:0;tM("u_softTau",tH),tM("u_edgeSigma",tJ),tM("u_edgeTau",tQ),tM("u_edgePhi",tY),tM("u_edgeMix",tK);let tZ=Math.min(24,Math.max(8,Math.floor(tn.kernelSize*tL*(e.anisotropy>1?.5:.75))));tM("u_maxRadius",tZ),this.log("uniforms:painterly",{sectors:tD,order:tU,sigmaSpatial:tP,sigmaRange:tI,adaptStrength:tO,radiusMinScale:tC,radiusMaxScale:tN,flowSigma:tX,quantizeLevels:tB,quantizeStrength:tk,quantizeDither:tz,softTau:tH,edgeSigma:tJ,edgeTau:tQ,edgePhi:tY,edgeMix:tK});let tj=null,t$=!1,t0=null;try{(t$=!!(t0=this.gl.getExtension("EXT_disjoint_timer_query_webgl2")||this.gl.getExtension("EXT_disjoint_timer_query"))&&"function"==typeof this.gl.beginQuery)&&(tj=this.gl.createQuery(),this.gl.beginQuery(t0.TIME_ELAPSED_EXT,tj))}catch(t){}let t2=this.now();this.log("draw:start"),this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,t_?this.prepassTexture:this.texture),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.log("draw:done");try{this.gl.flush()}catch(t){}try{t$&&this.gl.endQuery(t0.TIME_ELAPSED_EXT)}catch(t){}{let t=this.gl.getError();if(t!==this.gl.NO_ERROR)throw this.errLog("drawArrays error",t),null==(Q=n.errors)||Q.push({where:"drawArrays",code:t,label:this.glErrorLabel(t)}),n.failedStep="draw",Error("DRAW_FAILED_".concat(t))}if(n.timings=n.timings||{},n.timings.draw=this.now()-t2,t$&&tj){try{let t=this.now();for(;!this.gl.getQueryParameter(tj,this.gl.QUERY_RESULT_AVAILABLE)&&this.now()-t<20;)await new Promise(t=>setTimeout(t,1));if(this.gl.getQueryParameter(tj,this.gl.QUERY_RESULT_AVAILABLE)){n.gpuTimeNs=this.gl.getQueryParameter(tj,this.gl.QUERY_RESULT);let t=t0;if(t&&"number"==typeof t.GPU_DISJOINT_EXT)try{n.gpuDisjoint=!!this.gl.getParameter(t.GPU_DISJOINT_EXT)}catch(t){}}else null==(Y=n.notes)||Y.push("GPU timer query not ready within 20ms")}catch(t){}try{this.gl.deleteQuery(tj)}catch(t){}}if(r&&r(.8),null==i?void 0:i.aborted)throw Error("Operation cancelled");let t1=this.now();this.log("readback:start");let t3=Math.max(0,Math.floor(null!=(K=null==a?void 0:a.x)?K:0)),t5=Math.max(0,Math.floor(null!=(Z=null==a?void 0:a.y)?Z:0)),t8=Math.max(1,Math.floor(null!=(j=null==a?void 0:a.w)?j:tm)),t4=Math.max(1,Math.floor(null!=($=null==a?void 0:a.h)?$:tp));this.ensureReadbackSurface(t8,t4);let t6=this.readbackCtx;if(!t6)throw n.failedStep="2d-context",Error("2D_CTX_FAIL");let t9=this.canvasEl,t7=Math.max(0,Math.min(tp-t4,t5));t6.drawImage(t9,t3,t7,t8,t4,0,0,t8,t4);let et=t6.getImageData(0,0,t8,t4);n.timings.readback=this.now()-t1,this.log("readback:done",{rw:t8,rh:t4}),r&&r(1),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.bindVertexArray(null),this.gl.bindTexture(this.gl.TEXTURE_2D,null);try{this.disposeRenderTarget()}catch(t){}if(!(null==l?void 0:l.keepTexture)){if(this.texture){try{this.gl.deleteTexture(this.texture)}catch(t){}this.texture=null,this.inputTexW=0,this.inputTexH=0}if(this.prepassTexture){try{this.gl.deleteTexture(this.prepassTexture)}catch(t){}this.prepassTexture=null}}n.finishedAt=this.now(),n.durationMs=n.finishedAt-n.startedAt,n.timings=n.timings||{},n.timings.total=n.durationMs,this.lastReport=n,this.log("applyFilter:done",{durationMs:n.durationMs});try{null==to||null==(tt=to.close)||tt.call(to)}catch(t){}return et}catch(t){this.errLog("applyFilter:error",t);try{n.finishedAt=this.now(),n.durationMs=n.finishedAt-n.startedAt,n.exception=t instanceof Error?t.stack||t.message:String(t),this.lastReport=n}catch(t){}throw t}}renderToCanvas(t,e){let r=t.getContext("2d",{willReadFrequently:!1});if(!r)throw Error("2D context not available for display");t.width=e.width,t.height=e.height,r.imageSmoothingEnabled=!1,r.putImageData(e,0,0)}destroy(){try{this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.bindTexture(this.gl.TEXTURE_2D,null),this.gl.bindVertexArray(null)}catch(t){}if(this.quadBuffer)try{this.gl.deleteBuffer(this.quadBuffer)}catch(t){}if(this.fastVAO)try{this.gl.deleteVertexArray(this.fastVAO)}catch(t){}if(this.disposeRenderTarget(),this.texture){try{this.gl.deleteTexture(this.texture)}catch(t){}this.texture=null}if(this.prepassTexture){try{this.gl.deleteTexture(this.prepassTexture)}catch(t){}this.prepassTexture=null}this.inputTexW=0,this.inputTexH=0;try{this.canvasEl.width=0,this.canvasEl.height=0}catch(t){}this.readbackCanvas=null,this.readbackCtx=null}constructor(t){this.contextLost=!1,this.maxTextureSize=0,this.maxRenderbufferSize=0,this.prefer2DReadback=!0,this.lastReport=null,this.buildNotes=[],this.fastProgram=null,this.prepassProgram=null,this.framebuffer=null,this.texture=null,this.prepassTexture=null,this.outputTexture=null,this.outputRenderbuffer=null,this.quadBuffer=null,this.fastVAO=null,this.prepassVAO=null,this.uniformLocations=new Map,this.readbackCanvas=null,this.readbackCtx=null,this.rtWidth=0,this.rtHeight=0,this.inputTexW=0,this.inputTexH=0,(0===t.width||0===t.height)&&(t.width=256,t.height=256);let e=t.getContext("webgl2",{alpha:!1,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1,powerPreference:"high-performance",failIfMajorPerformanceCaveat:!1});if(!e){try{let e=null,r=!1;"parentNode"in t&&(e=t.parentNode,"undefined"!=typeof document&&(r=document.contains(t)));let i="undefined"!=typeof navigator?navigator.userAgent:"n/a";console.error("Failed to create WebGL2 context:",{canvasWidth:t.width,canvasHeight:t.height,canvasParent:e,canvasInDOM:r,userAgent:i})}catch(t){}throw Error("WebGL2 is required but not supported by your browser/system")}this.gl=e,this.canvasEl=t;let r=this.canvasEl;"addEventListener"in r&&(r.addEventListener("webglcontextlost",t=>{try{t.preventDefault()}catch(t){}this.contextLost=!0,console.warn("WebGL context lost")},{passive:!1}),r.addEventListener("webglcontextrestored",()=>{console.info("WebGL context restored"),this.contextLost=!1;try{this.initializeGL();try{this.testFramebufferCapabilities()}catch(t){console.warn("Post-restore FBO test failed:",t)}}catch(t){console.error("Failed to reinitialize WebGL after context restore:",t)}})),this.info("Using WebGL2");try{let t=e.getParameter(e.MAX_TEXTURE_SIZE),r=e.getParameter(e.MAX_RENDERBUFFER_SIZE);this.maxTextureSize=Number(t)||0,this.maxRenderbufferSize=Number(r)||0;let i=e.getParameter(e.MAX_VIEWPORT_DIMS);this.log("Limits",{MAX_TEXTURE_SIZE:t,MAX_RENDERBUFFER_SIZE:r,MAX_VIEWPORT_DIMS:i})}catch(t){}this.initializeGL();try{this.testFramebufferCapabilities()}catch(t){this.warnLog("Framebuffer capability test failed:",t)}}}a.DEBUG=!1,a.successRuns=0;var l=r(5704);let n=null,s=null,o=void 0!==l&&l.env&&!1;function u(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];if(o)try{console.log("[Worker]",...e)}catch(t){}}function h(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];if(o)try{console.info("[Worker]",...e)}catch(t){}}function g(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];try{console.error("[Worker]",...e)}catch(t){}}self.onmessage=async t=>{let e=t.data;switch(e.type){case"init":try{h("init"),self.postMessage({type:"progress",requestId:"init",progress:1})}catch(e){let t=e instanceof Error?e.message:String(e);g("init error",t),self.postMessage({type:"error",error:t})}break;case"process":{var r,i,l,c,f,d,m,p,x,E,_,v,T;let t=null,b=Date.now(),R=!1;try{try{n&&n.abort()}catch(t){}let g=new AbortController;n=g,s=e.requestId;let T=Math.max(.0625,Number(null!=(x=null!=(p=null==(r=e.options)?void 0:r.scale)?p:e.params.upscaleFactor)?x:1));u("process:start",{req:e.requestId,src:"".concat(e.imageData.width,"x").concat(e.imageData.height),scale:T,tileSize:null==(i=e.options)?void 0:i.tileSize});let M=null;try{M=new OffscreenCanvas(1,1),t=new a(M),h("gl:context created")}catch(e){!function(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];try{console.warn("[Worker]",...e)}catch(t){}}("gl:create failed, retrying once"),await new Promise(t=>setTimeout(t,50)),M=new OffscreenCanvas(1,1),t=new a(M),h("gl:context created (retry)")}let w=e.imageData,y=null==(l=e.options)?void 0:l.preprocess,S=Date.now(),A=y&&y.enabled?Date.now()-S:0,F=Math.max(64,Math.min(1024,Math.floor(null!=(E=null==(c=e.options)?void 0:c.tileSize)?E:320))),L=await t.applyFilterTiled(w,e.params,{tileSize:F,scale:T,partition:null==(f=e.options)?void 0:f.partition,gpuPreprocess:null==(d=e.options)?void 0:d.preprocess},t=>{o&&(0===t||.5===t||.8===t||t>=1||t-Math.floor(100*t)/100<1e-6)&&u("progress",t),self.postMessage({type:"progress",requestId:e.requestId,progress:t})},g.signal),D=Math.max(1,w.width*T),U=Math.max(1,w.height*T),P=null==(m=e.options)?void 0:m.partition;null==P||P.x,null==P||P.y;let I=Math.max(1,Math.floor(null!=(_=null==P?void 0:P.w)?_:D)),O=Math.max(1,Math.floor(null!=(v=null==P?void 0:P.h)?v:U)),C=Math.max(1,Math.ceil(I/F)),N=Math.max(1,Math.ceil(O/F)),X=null;try{X=t.getLastReport()}catch(t){}if(g.signal.aborted||s!==e.requestId){R=!0;return}try{if(X){let t={canceled:R,retries:0,overallMs:Date.now()-b,preprocessMs:A,tiling:{tilesX:C,tilesY:N,totalTiles:C*N,tileSize:F}};X.worker=t,X.requestId=e.requestId,u("report:post",{failedStep:X.failedStep,errors:(X.errors||[]).length}),self.postMessage({type:"report",requestId:e.requestId,report:X})}}catch(t){}u("process:done",{req:e.requestId,out:"".concat(L.width,"x").concat(L.height)}),self.postMessage({type:"result",requestId:e.requestId,imageData:L,report:null!=X?X:void 0},[L.data.buffer])}catch(a){let r=a instanceof Error?a.message:String(a);g("process:error",r);let i=null;try{i=null!=(T=null==t?void 0:t.getLastReport())?T:null}catch(t){}if(i)try{i.worker={canceled:R,retries:0,overallMs:Date.now()-b,tiles:[]},i.requestId=e.requestId,u("report:post (failure)",{failedStep:i.failedStep,errors:(i.errors||[]).length}),self.postMessage({type:"report",requestId:e.requestId,report:i})}catch(t){}self.postMessage({type:"error",requestId:e.requestId,error:r,report:null!=i?i:void 0})}finally{if(t)try{t.destroy(),u("gl:destroy")}catch(t){}s===e.requestId&&(s=null,n=null)}break}case"cancel":if(n)try{n.abort()}catch(t){}break;case"dispose":close()}}}}]);